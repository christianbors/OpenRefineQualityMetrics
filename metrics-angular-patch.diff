diff --git a/IDEs/eclipse/Refine with extensions.launch b/IDEs/eclipse/Refine with extensions.launch
index 1256266..6e95566 100644
--- a/IDEs/eclipse/Refine with extensions.launch	
+++ b/IDEs/eclipse/Refine with extensions.launch	
@@ -7,8 +7,9 @@
 <listEntry value="1"/>
 </listAttribute>
 <stringAttribute key="org.eclipse.debug.core.source_locator_id" value="org.eclipse.jdt.launching.sourceLocator.JavaSourceLookupDirector"/>
-<stringAttribute key="org.eclipse.debug.core.source_locator_memento" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#13;&#10;&lt;sourceLookupDirector&gt;&#13;&#10;&lt;sourceContainers duplicates=&quot;false&quot;&gt;&#13;&#10;&lt;container memento=&quot;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; standalone=&amp;quot;no&amp;quot;?&amp;gt;&amp;#13;&amp;#10;&amp;lt;javaProject name=&amp;quot;grefine-gdata-extension&amp;quot;/&amp;gt;&amp;#13;&amp;#10;&quot; typeId=&quot;org.eclipse.jdt.launching.sourceContainer.javaProject&quot;/&gt;&#13;&#10;&lt;container memento=&quot;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; standalone=&amp;quot;no&amp;quot;?&amp;gt;&amp;#13;&amp;#10;&amp;lt;packageFragmentRoot handle=&amp;quot;=grefine/\/grefine\/webapp\/WEB-INF\/lib\/dom4j-1.6.1.jar&amp;quot;/&amp;gt;&amp;#13;&amp;#10;&quot; typeId=&quot;org.eclipse.jdt.launching.sourceContainer.packageFragmentRoot&quot;/&gt;&#13;&#10;&lt;container memento=&quot;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; standalone=&amp;quot;no&amp;quot;?&amp;gt;&amp;#13;&amp;#10;&amp;lt;javaProject name=&amp;quot;grefine-server&amp;quot;/&amp;gt;&amp;#13;&amp;#10;&quot; typeId=&quot;org.eclipse.jdt.launching.sourceContainer.javaProject&quot;/&gt;&#13;&#10;&lt;container memento=&quot;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; standalone=&amp;quot;no&amp;quot;?&amp;gt;&amp;#13;&amp;#10;&amp;lt;javaProject name=&amp;quot;grefine&amp;quot;/&amp;gt;&amp;#13;&amp;#10;&quot; typeId=&quot;org.eclipse.jdt.launching.sourceContainer.javaProject&quot;/&gt;&#13;&#10;&lt;container memento=&quot;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; standalone=&amp;quot;no&amp;quot;?&amp;gt;&amp;#13;&amp;#10;&amp;lt;packageFragmentRoot handle=&amp;quot;=grefine/\/grefine\/webapp\/WEB-INF\/lib\/json-20100208.jar&amp;quot;/&amp;gt;&amp;#13;&amp;#10;&quot; typeId=&quot;org.eclipse.jdt.launching.sourceContainer.packageFragmentRoot&quot;/&gt;&#13;&#10;&lt;container memento=&quot;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; standalone=&amp;quot;no&amp;quot;?&amp;gt;&amp;#13;&amp;#10;&amp;lt;packageFragmentRoot handle=&amp;quot;=grefine/\/grefine\/webapp\/WEB-INF\/lib\/httpcore-4.0.1.jar&amp;quot;/&amp;gt;&amp;#13;&amp;#10;&quot; typeId=&quot;org.eclipse.jdt.launching.sourceContainer.packageFragmentRoot&quot;/&gt;&#13;&#10;&lt;container memento=&quot;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; standalone=&amp;quot;no&amp;quot;?&amp;gt;&amp;#13;&amp;#10;&amp;lt;packageFragmentRoot handle=&amp;quot;=grefine/\/grefine\/webapp\/WEB-INF\/lib\/httpclient-4.0.1.jar&amp;quot;/&amp;gt;&amp;#13;&amp;#10;&quot; typeId=&quot;org.eclipse.jdt.launching.sourceContainer.packageFragmentRoot&quot;/&gt;&#13;&#10;&lt;container memento=&quot;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; standalone=&amp;quot;no&amp;quot;?&amp;gt;&amp;#13;&amp;#10;&amp;lt;packageFragmentRoot handle=&amp;quot;=grefine/\/grefine\/webapp\/WEB-INF\/lib\/signpost-core-1.2.1.1.jar&amp;quot;/&amp;gt;&amp;#13;&amp;#10;&quot; typeId=&quot;org.eclipse.jdt.launching.sourceContainer.packageFragmentRoot&quot;/&gt;&#13;&#10;&lt;container memento=&quot;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; standalone=&amp;quot;no&amp;quot;?&amp;gt;&amp;#13;&amp;#10;&amp;lt;packageFragmentRoot handle=&amp;quot;=grefine/\/grefine\/webapp\/WEB-INF\/lib\/signpost-commonshttp4-1.2.1.1.jar&amp;quot;/&amp;gt;&amp;#13;&amp;#10;&quot; typeId=&quot;org.eclipse.jdt.launching.sourceContainer.packageFragmentRoot&quot;/&gt;&#13;&#10;&lt;container memento=&quot;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; standalone=&amp;quot;no&amp;quot;?&amp;gt;&amp;#13;&amp;#10;&amp;lt;packageFragmentRoot handle=&amp;quot;=grefine/\/grefine\/webapp\/WEB-INF\/lib\/opencsv-2.2.jar&amp;quot;/&amp;gt;&amp;#13;&amp;#10;&quot; typeId=&quot;org.eclipse.jdt.launching.sourceContainer.packageFragmentRoot&quot;/&gt;&#13;&#10;&lt;container memento=&quot;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; standalone=&amp;quot;no&amp;quot;?&amp;gt;&amp;#13;&amp;#10;&amp;lt;packageFragmentRoot handle=&amp;quot;=grefine/\/grefine\/webapp\/WEB-INF\/lib\/slf4j-api-1.5.6.jar&amp;quot;/&amp;gt;&amp;#13;&amp;#10;&quot; typeId=&quot;org.eclipse.jdt.launching.sourceContainer.packageFragmentRoot&quot;/&gt;&#13;&#10;&lt;container memento=&quot;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; standalone=&amp;quot;no&amp;quot;?&amp;gt;&amp;#13;&amp;#10;&amp;lt;packageFragmentRoot handle=&amp;quot;=grefine/\/grefine\/webapp\/WEB-INF\/lib\/slf4j-log4j12-1.5.6.jar&amp;quot;/&amp;gt;&amp;#13;&amp;#10;&quot; typeId=&quot;org.eclipse.jdt.launching.sourceContainer.packageFragmentRoot&quot;/&gt;&#13;&#10;&lt;container memento=&quot;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; standalone=&amp;quot;no&amp;quot;?&amp;gt;&amp;#13;&amp;#10;&amp;lt;packageFragmentRoot handle=&amp;quot;=grefine/\/grefine\/webapp\/WEB-INF\/lib\/log4j-1.2.15.jar&amp;quot;/&amp;gt;&amp;#13;&amp;#10;&quot; typeId=&quot;org.eclipse.jdt.launching.sourceContainer.packageFragmentRoot&quot;/&gt;&#13;&#10;&lt;container memento=&quot;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; standalone=&amp;quot;no&amp;quot;?&amp;gt;&amp;#13;&amp;#10;&amp;lt;packageFragmentRoot handle=&amp;quot;=grefine/\/grefine-server\/lib\/servlet-api-2.5.jar&amp;quot;/&amp;gt;&amp;#13;&amp;#10;&quot; typeId=&quot;org.eclipse.jdt.launching.sourceContainer.packageFragmentRoot&quot;/&gt;&#13;&#10;&lt;container memento=&quot;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; standalone=&amp;quot;no&amp;quot;?&amp;gt;&amp;#13;&amp;#10;&amp;lt;default/&amp;gt;&amp;#13;&amp;#10;&quot; typeId=&quot;org.eclipse.debug.core.containerType.default&quot;/&gt;&#13;&#10;&lt;/sourceContainers&gt;&#13;&#10;&lt;/sourceLookupDirector&gt;&#13;&#10;"/>
+<stringAttribute key="org.eclipse.debug.core.source_locator_memento" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;sourceLookupDirector&gt;&#10;&lt;sourceContainers duplicates=&quot;false&quot;&gt;&#10;&lt;container memento=&quot;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; standalone=&amp;quot;no&amp;quot;?&amp;gt;&amp;#10;&amp;lt;javaProject name=&amp;quot;grefine-gdata-extension&amp;quot;/&amp;gt;&amp;#10;&quot; typeId=&quot;org.eclipse.jdt.launching.sourceContainer.javaProject&quot;/&gt;&#10;&lt;container memento=&quot;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; standalone=&amp;quot;no&amp;quot;?&amp;gt;&amp;#10;&amp;lt;packageFragmentRoot handle=&amp;quot;=grefine/\/grefine\/webapp\/WEB-INF\/lib\/dom4j-1.6.1.jar&amp;quot;/&amp;gt;&amp;#10;&quot; typeId=&quot;org.eclipse.jdt.launching.sourceContainer.packageFragmentRoot&quot;/&gt;&#10;&lt;container memento=&quot;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; standalone=&amp;quot;no&amp;quot;?&amp;gt;&amp;#10;&amp;lt;javaProject name=&amp;quot;grefine-server&amp;quot;/&amp;gt;&amp;#10;&quot; typeId=&quot;org.eclipse.jdt.launching.sourceContainer.javaProject&quot;/&gt;&#10;&lt;container memento=&quot;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; standalone=&amp;quot;no&amp;quot;?&amp;gt;&amp;#10;&amp;lt;javaProject name=&amp;quot;grefine&amp;quot;/&amp;gt;&amp;#10;&quot; typeId=&quot;org.eclipse.jdt.launching.sourceContainer.javaProject&quot;/&gt;&#10;&lt;container memento=&quot;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; standalone=&amp;quot;no&amp;quot;?&amp;gt;&amp;#10;&amp;lt;packageFragmentRoot handle=&amp;quot;=grefine/\/grefine\/webapp\/WEB-INF\/lib\/json-20100208.jar&amp;quot;/&amp;gt;&amp;#10;&quot; typeId=&quot;org.eclipse.jdt.launching.sourceContainer.packageFragmentRoot&quot;/&gt;&#10;&lt;container memento=&quot;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; standalone=&amp;quot;no&amp;quot;?&amp;gt;&amp;#10;&amp;lt;packageFragmentRoot handle=&amp;quot;=grefine/\/grefine\/webapp\/WEB-INF\/lib\/httpcore-4.0.1.jar&amp;quot;/&amp;gt;&amp;#10;&quot; typeId=&quot;org.eclipse.jdt.launching.sourceContainer.packageFragmentRoot&quot;/&gt;&#10;&lt;container memento=&quot;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; standalone=&amp;quot;no&amp;quot;?&amp;gt;&amp;#10;&amp;lt;packageFragmentRoot handle=&amp;quot;=grefine/\/grefine\/webapp\/WEB-INF\/lib\/httpclient-4.0.1.jar&amp;quot;/&amp;gt;&amp;#10;&quot; typeId=&quot;org.eclipse.jdt.launching.sourceContainer.packageFragmentRoot&quot;/&gt;&#10;&lt;container memento=&quot;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; standalone=&amp;quot;no&amp;quot;?&amp;gt;&amp;#10;&amp;lt;packageFragmentRoot handle=&amp;quot;=grefine/\/grefine\/webapp\/WEB-INF\/lib\/signpost-core-1.2.1.1.jar&amp;quot;/&amp;gt;&amp;#10;&quot; typeId=&quot;org.eclipse.jdt.launching.sourceContainer.packageFragmentRoot&quot;/&gt;&#10;&lt;container memento=&quot;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; standalone=&amp;quot;no&amp;quot;?&amp;gt;&amp;#10;&amp;lt;packageFragmentRoot handle=&amp;quot;=grefine/\/grefine\/webapp\/WEB-INF\/lib\/signpost-commonshttp4-1.2.1.1.jar&amp;quot;/&amp;gt;&amp;#10;&quot; typeId=&quot;org.eclipse.jdt.launching.sourceContainer.packageFragmentRoot&quot;/&gt;&#10;&lt;container memento=&quot;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; standalone=&amp;quot;no&amp;quot;?&amp;gt;&amp;#10;&amp;lt;packageFragmentRoot handle=&amp;quot;=grefine/\/grefine\/webapp\/WEB-INF\/lib\/opencsv-2.2.jar&amp;quot;/&amp;gt;&amp;#10;&quot; typeId=&quot;org.eclipse.jdt.launching.sourceContainer.packageFragmentRoot&quot;/&gt;&#10;&lt;container memento=&quot;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; standalone=&amp;quot;no&amp;quot;?&amp;gt;&amp;#10;&amp;lt;packageFragmentRoot handle=&amp;quot;=grefine/\/grefine\/webapp\/WEB-INF\/lib\/slf4j-api-1.5.6.jar&amp;quot;/&amp;gt;&amp;#10;&quot; typeId=&quot;org.eclipse.jdt.launching.sourceContainer.packageFragmentRoot&quot;/&gt;&#10;&lt;container memento=&quot;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; standalone=&amp;quot;no&amp;quot;?&amp;gt;&amp;#10;&amp;lt;packageFragmentRoot handle=&amp;quot;=grefine/\/grefine\/webapp\/WEB-INF\/lib\/slf4j-log4j12-1.5.6.jar&amp;quot;/&amp;gt;&amp;#10;&quot; typeId=&quot;org.eclipse.jdt.launching.sourceContainer.packageFragmentRoot&quot;/&gt;&#10;&lt;container memento=&quot;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; standalone=&amp;quot;no&amp;quot;?&amp;gt;&amp;#10;&amp;lt;packageFragmentRoot handle=&amp;quot;=grefine/\/grefine\/webapp\/WEB-INF\/lib\/log4j-1.2.15.jar&amp;quot;/&amp;gt;&amp;#10;&quot; typeId=&quot;org.eclipse.jdt.launching.sourceContainer.packageFragmentRoot&quot;/&gt;&#10;&lt;container memento=&quot;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; standalone=&amp;quot;no&amp;quot;?&amp;gt;&amp;#10;&amp;lt;packageFragmentRoot handle=&amp;quot;=grefine/\/grefine-server\/lib\/servlet-api-2.5.jar&amp;quot;/&amp;gt;&amp;#10;&quot; typeId=&quot;org.eclipse.jdt.launching.sourceContainer.packageFragmentRoot&quot;/&gt;&#10;&lt;container memento=&quot;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; standalone=&amp;quot;no&amp;quot;?&amp;gt;&amp;#10;&amp;lt;default/&amp;gt;&amp;#10;&quot; typeId=&quot;org.eclipse.debug.core.containerType.default&quot;/&gt;&#10;&lt;/sourceContainers&gt;&#10;&lt;/sourceLookupDirector&gt;&#10;"/>
+<booleanAttribute key="org.eclipse.jdt.launching.ATTR_USE_START_ON_FIRST_THREAD" value="true"/>
 <stringAttribute key="org.eclipse.jdt.launching.MAIN_TYPE" value="com.google.refine.Refine"/>
 <stringAttribute key="org.eclipse.jdt.launching.PROJECT_ATTR" value="OpenRefine"/>
-<stringAttribute key="org.eclipse.jdt.launching.VM_ARGUMENTS" value="-Drefine.autoreloading=true -Dbutterfly.modules.path=modules,&quot;${resource_loc:/OpenRefine/extensions/sample}&quot;,&quot;${resource_loc:/OpenRefine/extensions/jython}&quot;,&quot;${resource_loc:/OpenRefine/extensions/gdata}&quot;"/>
+<stringAttribute key="org.eclipse.jdt.launching.VM_ARGUMENTS" value="-Drefine.autoreloading=true -Dbutterfly.modules.path=modules,&quot;${resource_loc:/OpenRefine/extensions/custom-quality-metrics}“,“${resource_loc:/OpenRefine/extensions/jython}&quot;,&quot;${resource_loc:/OpenRefine/extensions/gdata}&quot;"/>
 </launchConfiguration>
diff --git a/IDEs/eclipse/Refine.launch b/IDEs/eclipse/Refine.launch
index c10ddee..d3c272a 100644
--- a/IDEs/eclipse/Refine.launch
+++ b/IDEs/eclipse/Refine.launch
@@ -6,6 +6,7 @@
 <listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_TYPES">
 <listEntry value="1"/>
 </listAttribute>
+<booleanAttribute key="org.eclipse.jdt.launching.ATTR_USE_START_ON_FIRST_THREAD" value="true"/>
 <stringAttribute key="org.eclipse.jdt.launching.MAIN_TYPE" value="com.google.refine.Refine"/>
 <stringAttribute key="org.eclipse.jdt.launching.PROJECT_ATTR" value="OpenRefine"/>
 <stringAttribute key="org.eclipse.jdt.launching.VM_ARGUMENTS" value="-Drefine.autoreloading=true"/>
diff --git a/broker/core/src/com/google/refine/broker/RefineBroker.java b/broker/core/src/com/google/refine/broker/RefineBroker.java
index ad89d5e..6b48ee5 100644
--- a/broker/core/src/com/google/refine/broker/RefineBroker.java
+++ b/broker/core/src/com/google/refine/broker/RefineBroker.java
@@ -221,9 +221,9 @@ public abstract class RefineBroker extends ButterflyModuleImpl {
         }
         
         List<NameValuePair> formparams = new ArrayList<NameValuePair>();
-        Map<String,String> params = (Map<String,String>) request.getParameterMap();
-        for (Entry<String,String> e : params.entrySet()) {
-            formparams.add(new BasicNameValuePair((String) e.getKey(), (String) e.getValue()));
+        Map<String,String[]> params = (Map<String,String[]>) request.getParameterMap();
+        for (Entry<String,String[]> e : params.entrySet()) {
+            formparams.add(new BasicNameValuePair((String) e.getKey(), (String) e.getValue()[0]));
         }
         UrlEncodedFormEntity entity = new UrlEncodedFormEntity(formparams, "UTF-8");
 
diff --git a/extensions/build.xml b/extensions/build.xml
index ed44eca..629d633 100644
--- a/extensions/build.xml
+++ b/extensions/build.xml
@@ -13,7 +13,8 @@
     <ant dir="jython/" target="build" />
     <ant dir="gdata/" target="build" />
     <ant dir="pc-axis/" target="build" />
-  	<ant dir="database/" target="build" />
+    <ant dir="custom-quality-metrics/" target="build" />
+    <ant dir="provenance/" target="build" />
   </target>
 
   <target name="clean">
@@ -22,12 +23,7 @@
     <ant dir="jython/" target="clean" />
     <ant dir="gdata/" target="clean" />
     <ant dir="pc-axis/" target="clean" />
-  	<ant dir="database/" target="clean" />
-  </target>
-
-  <target name="test">
-    <echo message="Testing extensions" />
-    <ant dir="jython/" target="test" />
-  	<ant dir="database/" target="test" />
+    <ant dir="custom-quality-metrics/" target="clean" />
+    <ant dir="provenance/" target="clean" />
   </target>
 </project>
diff --git a/main/src/com/google/refine/commands/Command.java b/main/src/com/google/refine/commands/Command.java
index d4466c7..45b2105 100644
--- a/main/src/com/google/refine/commands/Command.java
+++ b/main/src/com/google/refine/commands/Command.java
@@ -243,6 +243,7 @@ public abstract class Command {
         Process process
     ) throws Exception {
         response.setCharacterEncoding("UTF-8");
+        response.addHeader("Access-Control-Allow-Origin", "*");
         response.setHeader("Content-Type", "application/json");
 
         HistoryEntry historyEntry = project.processManager.queueProcess(process);
@@ -267,7 +268,9 @@ public abstract class Command {
         throws IOException, ServletException {
 
         response.setCharacterEncoding("UTF-8");
+        response.addHeader("Access-Control-Allow-Origin", "*");
         response.setStatus(HttpServletResponse.SC_OK);
+        
         Writer w = response.getWriter();
         if (w != null) {
             w.write(content);
@@ -302,6 +305,7 @@ public abstract class Command {
             throws IOException, JSONException {
 
         response.setCharacterEncoding("UTF-8");
+        response.addHeader("Access-Control-Allow-Origin", "*");
         response.setHeader("Content-Type", "application/json");
         response.setHeader("Cache-Control", "no-cache");
 
diff --git a/main/src/com/google/refine/commands/GetAllPreferencesCommand.java b/main/src/com/google/refine/commands/GetAllPreferencesCommand.java
index 8b2c6bc..942ab07 100644
--- a/main/src/com/google/refine/commands/GetAllPreferencesCommand.java
+++ b/main/src/com/google/refine/commands/GetAllPreferencesCommand.java
@@ -58,6 +58,7 @@ public class GetAllPreferencesCommand extends Command {
                 
         try {
             response.setCharacterEncoding("UTF-8");
+            response.addHeader("Access-Control-Allow-Origin", "*");
             response.setHeader("Content-Type", "application/json");
             
             JSONWriter writer = new JSONWriter(response.getWriter());
diff --git a/main/src/com/google/refine/commands/GetVersionCommand.java b/main/src/com/google/refine/commands/GetVersionCommand.java
index f2fd4f0..6e47619 100644
--- a/main/src/com/google/refine/commands/GetVersionCommand.java
+++ b/main/src/com/google/refine/commands/GetVersionCommand.java
@@ -56,6 +56,7 @@ public class GetVersionCommand extends Command {
             o.put("full_name", RefineServlet.FULLNAME);
 
             response.setCharacterEncoding("UTF-8");
+            response.addHeader("Access-Control-Allow-Origin", "*");
             response.setHeader("Content-Type", "application/json");
             respond(response, o.toString());
         } catch (JSONException e) {
diff --git a/main/src/com/google/refine/commands/HttpUtilities.java b/main/src/com/google/refine/commands/HttpUtilities.java
index 604fa9a..45ec24b 100644
--- a/main/src/com/google/refine/commands/HttpUtilities.java
+++ b/main/src/com/google/refine/commands/HttpUtilities.java
@@ -28,6 +28,7 @@ abstract public class HttpUtilities {
         throws IOException, ServletException {
     
         response.setCharacterEncoding("UTF-8");
+        response.addHeader("Access-Control-Allow-Origin", "*");
         response.setStatus(HttpServletResponse.SC_OK);
         Writer w = response.getWriter();
         if (w != null) {
@@ -67,6 +68,7 @@ abstract public class HttpUtilities {
             throws IOException, JSONException {
     
         response.setCharacterEncoding("UTF-8");
+        response.addHeader("Access-Control-Allow-Origin", "*");
         response.setHeader("Content-Type", "application/json");
     
         Writer w = response.getWriter();
@@ -100,6 +102,7 @@ abstract public class HttpUtilities {
             o.put("stack", sw.toString());
     
             response.setCharacterEncoding("UTF-8");
+            response.addHeader("Access-Control-Allow-Origin", "*");
             response.setHeader("Content-Type", "application/json");
             respond(response, o.toString());
         } catch (JSONException e1) {
diff --git a/main/src/com/google/refine/commands/expr/GetExpressionHistoryCommand.java b/main/src/com/google/refine/commands/expr/GetExpressionHistoryCommand.java
index a76a37f..ccb45d5 100644
--- a/main/src/com/google/refine/commands/expr/GetExpressionHistoryCommand.java
+++ b/main/src/com/google/refine/commands/expr/GetExpressionHistoryCommand.java
@@ -72,6 +72,7 @@ public class GetExpressionHistoryCommand extends Command {
             Set<String> done = new HashSet<String>();
             
             response.setCharacterEncoding("UTF-8");
+            response.addHeader("Access-Control-Allow-Origin", "*");
             response.setHeader("Content-Type", "application/json");
             
             JSONWriter writer = new JSONWriter(response.getWriter());
diff --git a/main/src/com/google/refine/commands/expr/GetExpressionLanguageInfoCommand.java b/main/src/com/google/refine/commands/expr/GetExpressionLanguageInfoCommand.java
index 13023b5..c738ea2 100644
--- a/main/src/com/google/refine/commands/expr/GetExpressionLanguageInfoCommand.java
+++ b/main/src/com/google/refine/commands/expr/GetExpressionLanguageInfoCommand.java
@@ -56,6 +56,7 @@ public class GetExpressionLanguageInfoCommand extends Command {
         
         try {
             response.setCharacterEncoding("UTF-8");
+            response.addHeader("Access-Control-Allow-Origin", "*");
             response.setHeader("Content-Type", "application/json");
             
             JSONWriter writer = new JSONWriter(response.getWriter());
diff --git a/main/src/com/google/refine/commands/expr/PreviewExpressionCommand.java b/main/src/com/google/refine/commands/expr/PreviewExpressionCommand.java
index 2eaca2d..2255566 100644
--- a/main/src/com/google/refine/commands/expr/PreviewExpressionCommand.java
+++ b/main/src/com/google/refine/commands/expr/PreviewExpressionCommand.java
@@ -95,6 +95,7 @@ public class PreviewExpressionCommand extends Command {
             }
             
             response.setCharacterEncoding("UTF-8");
+            response.addHeader("Access-Control-Allow-Origin", "*");
             response.setHeader("Content-Type", "application/json");
             
             JSONArray rowIndices = ParsingUtilities.evaluateJsonStringToArray(rowIndicesString);
diff --git a/main/src/com/google/refine/commands/history/GetOperationsCommand.java b/main/src/com/google/refine/commands/history/GetOperationsCommand.java
index 32ebc2f..09645bd 100644
--- a/main/src/com/google/refine/commands/history/GetOperationsCommand.java
+++ b/main/src/com/google/refine/commands/history/GetOperationsCommand.java
@@ -56,6 +56,7 @@ public class GetOperationsCommand extends Command {
         
         try {
             response.setCharacterEncoding("UTF-8");
+            response.addHeader("Access-Control-Allow-Origin", "*");
             response.setHeader("Content-Type", "application/json");
             
             Properties options = new Properties();
diff --git a/main/src/com/google/refine/commands/project/GetModelsCommand.java b/main/src/com/google/refine/commands/project/GetModelsCommand.java
index e8a2a39..3ade43f 100644
--- a/main/src/com/google/refine/commands/project/GetModelsCommand.java
+++ b/main/src/com/google/refine/commands/project/GetModelsCommand.java
@@ -84,6 +84,7 @@ public class GetModelsCommand extends Command {
         
         try {
             response.setCharacterEncoding("UTF-8");
+            response.addHeader("Access-Control-Allow-Origin", "*");
             response.setHeader("Content-Type", "application/json");
             response.setHeader("Cache-Control", "no-cache");
             
diff --git a/main/src/com/google/refine/commands/row/GetRowsCommand.java b/main/src/com/google/refine/commands/row/GetRowsCommand.java
index 32b0886..82b8207 100644
--- a/main/src/com/google/refine/commands/row/GetRowsCommand.java
+++ b/main/src/com/google/refine/commands/row/GetRowsCommand.java
@@ -108,7 +108,8 @@ public class GetRowsCommand extends Command {
             
             response.setCharacterEncoding("UTF-8");
             response.setHeader("Content-Type", callback == null ? "application/json" : "text/javascript");
-            
+            response.addHeader("Access-Control-Allow-Origin", "*");
+
             PrintWriter writer = response.getWriter();
             if (callback != null) {
                 writer.write(callback);
diff --git a/main/src/com/google/refine/commands/workspace/GetAllProjectMetadataCommand.java b/main/src/com/google/refine/commands/workspace/GetAllProjectMetadataCommand.java
index b262c2c..0fbdb9a 100644
--- a/main/src/com/google/refine/commands/workspace/GetAllProjectMetadataCommand.java
+++ b/main/src/com/google/refine/commands/workspace/GetAllProjectMetadataCommand.java
@@ -57,6 +57,7 @@ public class GetAllProjectMetadataCommand extends Command {
         
         try {
             response.setCharacterEncoding("UTF-8");
+            response.addHeader("Access-Control-Allow-Origin", "*");
             response.setHeader("Content-Type", "application/json");
             
             JSONWriter writer = new JSONWriter(response.getWriter());
diff --git a/server/IDEs/eclipse/Refine.launch b/server/IDEs/eclipse/Refine.launch
index 017e220..cd00318 100644
--- a/server/IDEs/eclipse/Refine.launch
+++ b/server/IDEs/eclipse/Refine.launch
@@ -6,6 +6,7 @@
 <listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_TYPES">
 <listEntry value="1"/>
 </listAttribute>
+<booleanAttribute key="org.eclipse.jdt.launching.ATTR_USE_START_ON_FIRST_THREAD" value="true"/>
 <stringAttribute key="org.eclipse.jdt.launching.MAIN_TYPE" value="com.google.refine.Refine"/>
 <stringAttribute key="org.eclipse.jdt.launching.PROJECT_ATTR" value="OpenRefine"/>
 <stringAttribute key="org.eclipse.jdt.launching.VM_ARGUMENTS" value="-Drefine.autoreloading=true"/>
